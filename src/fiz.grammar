@top Recipe { fullStatement* }

fullStatement { statement semi }

statement[@isGroup=Statement] { Call | Alias | Assignment }

ArgList { "(" ( value ("," value)* )? ")" }

Call { Identifier ArgList }

value[@isGroup=Value] { Variable | Call }

Variable { Identifier }

Alias { Variable "=" Variable }

Assignment { Variable ("," Variable)* "=" Call }

semi { ";" | omitSemi }

@skip { whitespace | LineComment | BlockComment }

@tokens {
  whitespace { std.whitespace+ }

  LineComment { "//" ![\n]* }

  BlockComment { "/*" blockCommentRest }

  blockCommentRest { ![*] blockCommentRest | "*" blockCommentAfterStar }

  blockCommentAfterStar { "/" | "*" blockCommentAfterStar | ![/*] blockCommentRest }

  identifierChar { std.asciiLetter | $[_$\u{a1}-\u{10ffff}] }

  word { identifierChar (identifierChar | std.digit)* }

  Identifier { word }

  @precedence { Identifier, whitespace }

  "(" ")"

}

@external tokens omitSemicolon from "./tokens" { omitSemi }

@detectDelim
